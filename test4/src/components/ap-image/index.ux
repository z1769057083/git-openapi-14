<template>
  <div id="{{id}}" class="ap-image {{classNames}}" onclick="onClick">
    <image
      class="content"
      object-fit="{{mode}}"
      src="{{url}}"
      onerror="onImageError"
    ></image>
  </div>
</template>

<script>
import {getHttpImageUrl, getClasses} from '@/utils';

export default {
  props: ['node'],
  data() {
    return {
      retry: 0
    };
  },
  computed: {
    id() {
      return this.node.id;
    },
    data() {
      return this.node.componentProperties.data;
    },
    url() {
      return getHttpImageUrl(
        this.retry > 0
          ? String(this.data.imageUrl).split('?')[0] + '?retry=' + this.retry
          : this.data.imageUrl
      );
    },
    classNames() {
      return getClasses(this.node);
    },
    mode() {
      let mode = this.node.componentProperties?.style?.mode;
      switch (mode) {
        case 'scaleToFill':
          return 'fill';
        case 'aspectFit':
          return 'contain';
        case 'aspectFill':
          return 'cover';
      }
      return 'cover';
    }
  },
  onClick(e) {
    if (this.node?.componentProperties?.data?.event?.click?.length) {
      this.$emit('handleEvent', 'click');
      e.stopPropagation();
    }
  },
  onImageError() {
    if (this.retry <= 3) {
      setTimeout(() => {
        this.retry++;
        console.warn('image load retry', this.url);
      }, 2000);
    }
  }
};
</script>

<style lang="less">
.ap-image {
  overflow: hidden;
  font-size: 0;

  .content {
    width: 100%;
    height: 100%;
    overflow: hidden;
  }
}
</style>
