<template>
  <div class="{{tabbar.length !== 0 ? 'wrap' : ''}}">
    <slot content="content"></slot>
    <div class="ap-tab-bar" if="{{tabbar.length !== 0}}">
      <div class="shadow"></div>
      <div class="tab tab-recommend">
        <div for="{{tab in tabbar}}">
          <image
            data-path="{{tab.pagePath}}"
            onclick="changePage(tab)"
            src="{{tab.active ? tab.selectedIconPath : tab.iconPath}}"
            if="{{tab.iconPath}}"
          ></image>
          <text
            data-path="{{tab.pagePath}}"
            onclick="changePage(tab)"
            class="{{tab.active ? 'selected' : ''}}"
          >
            {{ tab.text }}
          </text>
        </div>
      </div>
    </div>
  </div>
</template>

<style lang="less">
@import '../common/styles/base.less';

.wrap {
  padding-bottom: 108 * @width;
}

.ap-tab-bar {
  .shadow {
    position: fixed;
    bottom: 54 * @width;
    height: 5 * @width;
    width: 100%;
    background: linear-gradient(rgba(0, 0, 0, 0), rgba(0, 0, 0, 0.09));
  }

  .tab {
    background-color: rgba(255, 255, 255, 0.98);
    position: fixed;
    bottom: 0;
    flex-direction: row;
    height: 54 * @width;
    width: 100%;
    justify-content: space-around;

    div {
      flex-direction: column;
      justify-content: center;
      align-items: center;
    }

    image {
      width: 28 * @width;
      height: 28 * @width;
    }

    text {
      font-size: 15 * @width;
    }
  }

  .selected {
    color: #0091ff;
  }

  .tab-recommend {
    left: 0;
  }

  .tab-mine {
    right: 0;
  }
}
</style>

<script lang="ts">
export default {
  props: ['node'],
  computed: {
    id() {
      return this.node.id;
    },
    data() {
      return this.node.componentProperties.data;
    },
    tabbar() {
      return this.data.items || [];
    }
  },
  changePage(item) {
    let events = item.action?.click || [];
    if (events) {
      this.$emit('handleEvent', {
        actionType: 'click',
        events
      });
    }
  }
};
</script>
