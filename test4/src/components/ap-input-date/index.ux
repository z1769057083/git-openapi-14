<import src="../common/form-item/index.ux" name="form-item"></import>
<import name="my-icon" src="../common/icon/index.ux"></import>
<import name="my-calendar" src="../common/calendar/index.ux"></import>
<template>
  <div class="ap-input-date">
    <form-item
      label="{{data.label}}"
      name="{{field}}"
      onclick="openCalendar"
      required="{{data.required}}"
    >
      <text class="selected-date">{{ selected }}</text>
      <my-icon type="arrow-fwd" size="16"></my-icon>
    </form-item>

    <my-calendar
      visible="{{open}}"
      trip="single"
      onschedule="getSchedule"
    ></my-calendar>
  </div>
</template>
<style lang="less">
@import '@/static/styles/base.less';

.ap-input-date {
  .selected-date {
    flex: 1;
    text-align: right;
    font-size: 14 * @width;
  }
}
</style>
<script>
import {getBindDataField, dateFormat} from '@/utils';

export default {
  props: ['node'],
  data() {
    return {
      open: false
    };
  },
  computed: {
    id() {
      return this.node.id;
    },
    data() {
      return this.node.componentProperties.data;
    },
    selected() {
      let data = this.data;
      if (data.value) {
        return dateFormat(
          this.padTimestamp(data.value),
          this.data.inputFormat || 'YYYY-MM-DD'
        );
      }
      return data.placeholder || '请选择日期';
    },
    field() {
      return getBindDataField(this.data.bindInfo);
    }
  },

  padTimestamp(timestamp) {
    if (/^\d+$/.test(timestamp) && String(timestamp).length === 10) {
      timestamp = `${timestamp}000`; // js补3位时间戳
    }
    return timestamp;
  },

  onInit() {
    this.$watch('value', 'watchValue');
  },

  openCalendar(type) {
    if (this.data.disabled) {
      return;
    }
    this.open = !this.open;
  },

  formatValue(date) {
    let format = this.data.format || 'X';
    if (format === 'X') {
      return Math.round(date.getTime() / 1000);
    }
    return dateFormat(date, format);
  },

  getSchedule(e) {
    try {
      let selected = JSON.parse(e.detail.data);

      this.$dispatch('change', {
        value: this.formatValue(
          new Date(`${selected.year}-${selected.month}-${selected.day}`)
        ),
        field: this.field
      });
    } catch (e) {
      console.log(e);
    }
  }
};
</script>
